{"ast":null,"code":"var _jsxFileName = \"C:\\\\Licenta\\\\edu-digital_frontend\\\\src\\\\pages\\\\EditPost.js\",\n  _s = $RefreshSig$();\n// src/pages/EditPost.jsx\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport \"../styles/PostDetails.css\"; // stilul de vizualizare\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditPost() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [newFiles, setNewFiles] = useState([]);\n  const [feedback, setFeedback] = useState(\"\");\n\n  // Încarcă valorile curente\n  useEffect(() => {\n    fetch(`http://localhost:8080/posts/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(r => r.json()).then(post => {\n      setTitle(post.title);\n      setDescription(post.description);\n    }).catch(() => navigate(\"/\"));\n  }, [id, token, navigate]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setFeedback(\"\");\n\n    // 1. Actualizează textul\n    const textForm = new URLSearchParams();\n    textForm.append(\"title\", title);\n    textForm.append(\"description\", description);\n    const res1 = await fetch(`http://localhost:8080/posts/update/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Authorization\": `Bearer ${token}`\n      },\n      body: textForm.toString()\n    });\n    if (!res1.ok) {\n      const err = await res1.text();\n      return setFeedback(`⚠️ Eroare la editare text: ${err}`);\n    }\n\n    // 2. Încarcă imaginile noi\n    if (newFiles.length > 0) {\n      const mediaForm = new FormData();\n      newFiles.forEach(f => mediaForm.append(\"files\", f));\n      const res2 = await fetch(`http://localhost:8080/posts/${id}/add-media`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: mediaForm\n      });\n      if (!res2.ok) {\n        const err = await res2.text();\n        return setFeedback(`⚠️ Eroare la upload media: ${err}`);\n      }\n    }\n    setFeedback(\"✅ Postarea a fost actualizată cu succes!\");\n    setTimeout(() => navigate(`/posts/${id}`), 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-details\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"edit-post-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pd-title\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Titlu:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"pd-author\",\n        children: [\"Autor: \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pd-images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pd-description\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Descriere:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback\",\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pd-images\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Adaug\\u0103 imagini:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            onChange: e => setNewFiles(Array.from(e.target.files))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"edit-button\",\n        children: \"Salveaz\\u0103 modific\\u0103rile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(EditPost, \"k0QlJjpYcJgrWiwZMqIeMd9FeZo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","useNavigate","AuthContext","jsxDEV","_jsxDEV","EditPost","_s","id","user","token","navigate","title","setTitle","description","setDescription","newFiles","setNewFiles","feedback","setFeedback","fetch","headers","Authorization","then","r","json","post","catch","handleSubmit","e","preventDefault","textForm","URLSearchParams","append","res1","method","body","toString","ok","err","text","length","mediaForm","FormData","forEach","f","res2","setTimeout","className","children","onSubmit","type","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","name","multiple","Array","from","files","_c","$RefreshReg$"],"sources":["C:/Licenta/edu-digital_frontend/src/pages/EditPost.js"],"sourcesContent":["// src/pages/EditPost.jsx\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, useNavigate }           from \"react-router-dom\";\r\nimport { AuthContext }                       from \"../context/AuthContext\";\r\nimport \"../styles/PostDetails.css\";          // stilul de vizualizare\r\n\r\nexport default function EditPost() {\r\n  const { id }           = useParams();\r\n  const { user, token }  = useContext(AuthContext);\r\n  const navigate         = useNavigate();\r\n\r\n  const [title, setTitle]           = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [newFiles, setNewFiles]     = useState([]);\r\n  const [feedback, setFeedback]     = useState(\"\");\r\n\r\n  // Încarcă valorile curente\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8080/posts/${id}`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    })\r\n      .then(r => r.json())\r\n      .then(post => {\r\n        setTitle(post.title);\r\n        setDescription(post.description);\r\n      })\r\n      .catch(() => navigate(\"/\"));\r\n  }, [id, token, navigate]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setFeedback(\"\");\r\n\r\n    // 1. Actualizează textul\r\n    const textForm = new URLSearchParams();\r\n    textForm.append(\"title\", title);\r\n    textForm.append(\"description\", description);\r\n    const res1 = await fetch(`http://localhost:8080/posts/update/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        \"Authorization\": `Bearer ${token}`\r\n      },\r\n      body: textForm.toString()\r\n    });\r\n    if (!res1.ok) {\r\n      const err = await res1.text();\r\n      return setFeedback(`⚠️ Eroare la editare text: ${err}`);\r\n    }\r\n\r\n    // 2. Încarcă imaginile noi\r\n    if (newFiles.length > 0) {\r\n      const mediaForm = new FormData();\r\n      newFiles.forEach(f => mediaForm.append(\"files\", f));\r\n      const res2 = await fetch(`http://localhost:8080/posts/${id}/add-media`, {\r\n        method: \"POST\",\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        body: mediaForm\r\n      });\r\n      if (!res2.ok) {\r\n        const err = await res2.text();\r\n        return setFeedback(`⚠️ Eroare la upload media: ${err}`);\r\n      }\r\n    }\r\n\r\n    setFeedback(\"✅ Postarea a fost actualizată cu succes!\");\r\n    setTimeout(() => navigate(`/posts/${id}`), 1500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-details\">\r\n      <form onSubmit={handleSubmit} className=\"edit-post-form\">\r\n        {/* Titlu */}\r\n        <div className=\"pd-title\">\r\n          <label>\r\n            Titlu:\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={e => setTitle(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        {/* Autor */}\r\n        <h4 className=\"pd-author\">Autor: {user.name}</h4>\r\n\r\n        {/* Imagini existente */}\r\n        <div className=\"pd-images\">\r\n          {/* aici ai componenta de vizualizare a imaginilor */}\r\n        </div>\r\n\r\n        {/* Descriere */}\r\n        <div className=\"pd-description\">\r\n          <label>\r\n            Descriere:\r\n            <textarea\r\n              value={description}\r\n              onChange={e => setDescription(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        {/* Feedback */}\r\n        {feedback && <div className=\"feedback\">{feedback}</div>}\r\n\r\n        {/* Încărcare imagini noi */}\r\n        <div className=\"pd-images\">\r\n          <label>\r\n            Adaugă imagini:\r\n            <input\r\n              type=\"file\"\r\n              multiple\r\n              onChange={e => setNewFiles(Array.from(e.target.files))}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"edit-button\">\r\n          Salvează modificările\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,SAAS,EAAEC,WAAW,QAAkB,kBAAkB;AACnE,SAASC,WAAW,QAA8B,wBAAwB;AAC1E,OAAO,2BAA2B,CAAC,CAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAG,CAAC,GAAaP,SAAS,CAAC,CAAC;EACpC,MAAM;IAAEQ,IAAI;IAAEC;EAAM,CAAC,GAAIV,UAAU,CAACG,WAAW,CAAC;EAChD,MAAMQ,QAAQ,GAAWT,WAAW,CAAC,CAAC;EAEtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAaf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAOnB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAOrB,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACdqB,KAAK,CAAC,+BAA+BZ,EAAE,EAAE,EAAE;MACzCa,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUZ,KAAK;MAAG;IAC9C,CAAC,CAAC,CACCa,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACnBF,IAAI,CAACG,IAAI,IAAI;MACZb,QAAQ,CAACa,IAAI,CAACd,KAAK,CAAC;MACpBG,cAAc,CAACW,IAAI,CAACZ,WAAW,CAAC;IAClC,CAAC,CAAC,CACDa,KAAK,CAAC,MAAMhB,QAAQ,CAAC,GAAG,CAAC,CAAC;EAC/B,CAAC,EAAE,CAACH,EAAE,EAAEE,KAAK,EAAEC,QAAQ,CAAC,CAAC;EAEzB,MAAMiB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBX,WAAW,CAAC,EAAE,CAAC;;IAEf;IACA,MAAMY,QAAQ,GAAG,IAAIC,eAAe,CAAC,CAAC;IACtCD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAErB,KAAK,CAAC;IAC/BmB,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEnB,WAAW,CAAC;IAC3C,MAAMoB,IAAI,GAAG,MAAMd,KAAK,CAAC,sCAAsCZ,EAAE,EAAE,EAAE;MACnE2B,MAAM,EAAE,KAAK;MACbd,OAAO,EAAE;QACP,cAAc,EAAE,mCAAmC;QACnD,eAAe,EAAE,UAAUX,KAAK;MAClC,CAAC;MACD0B,IAAI,EAAEL,QAAQ,CAACM,QAAQ,CAAC;IAC1B,CAAC,CAAC;IACF,IAAI,CAACH,IAAI,CAACI,EAAE,EAAE;MACZ,MAAMC,GAAG,GAAG,MAAML,IAAI,CAACM,IAAI,CAAC,CAAC;MAC7B,OAAOrB,WAAW,CAAC,8BAA8BoB,GAAG,EAAE,CAAC;IACzD;;IAEA;IACA,IAAIvB,QAAQ,CAACyB,MAAM,GAAG,CAAC,EAAE;MACvB,MAAMC,SAAS,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAChC3B,QAAQ,CAAC4B,OAAO,CAACC,CAAC,IAAIH,SAAS,CAACT,MAAM,CAAC,OAAO,EAAEY,CAAC,CAAC,CAAC;MACnD,MAAMC,IAAI,GAAG,MAAM1B,KAAK,CAAC,+BAA+BZ,EAAE,YAAY,EAAE;QACtE2B,MAAM,EAAE,MAAM;QACdd,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUZ,KAAK;QAAG,CAAC;QAC7C0B,IAAI,EAAEM;MACR,CAAC,CAAC;MACF,IAAI,CAACI,IAAI,CAACR,EAAE,EAAE;QACZ,MAAMC,GAAG,GAAG,MAAMO,IAAI,CAACN,IAAI,CAAC,CAAC;QAC7B,OAAOrB,WAAW,CAAC,8BAA8BoB,GAAG,EAAE,CAAC;MACzD;IACF;IAEApB,WAAW,CAAC,0CAA0C,CAAC;IACvD4B,UAAU,CAAC,MAAMpC,QAAQ,CAAC,UAAUH,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC;EAClD,CAAC;EAED,oBACEH,OAAA;IAAK2C,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3B5C,OAAA;MAAM6C,QAAQ,EAAEtB,YAAa;MAACoB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAEtD5C,OAAA;QAAK2C,SAAS,EAAC,UAAU;QAAAC,QAAA,eACvB5C,OAAA;UAAA4C,QAAA,GAAO,QAEL,eAAA5C,OAAA;YACE8C,IAAI,EAAC,MAAM;YACXC,KAAK,EAAExC,KAAM;YACbyC,QAAQ,EAAExB,CAAC,IAAIhB,QAAQ,CAACgB,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;YACxCG,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAGNtD,OAAA;QAAI2C,SAAS,EAAC,WAAW;QAAAC,QAAA,GAAC,SAAO,EAACxC,IAAI,CAACmD,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAGjDtD,OAAA;QAAK2C,SAAS,EAAC;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAErB,CAAC,eAGNtD,OAAA;QAAK2C,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC7B5C,OAAA;UAAA4C,QAAA,GAAO,YAEL,eAAA5C,OAAA;YACE+C,KAAK,EAAEtC,WAAY;YACnBuC,QAAQ,EAAExB,CAAC,IAAId,cAAc,CAACc,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;YAC9CG,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAGLzC,QAAQ,iBAAIb,OAAA;QAAK2C,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAE/B;MAAQ;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAGvDtD,OAAA;QAAK2C,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxB5C,OAAA;UAAA4C,QAAA,GAAO,sBAEL,eAAA5C,OAAA;YACE8C,IAAI,EAAC,MAAM;YACXU,QAAQ;YACRR,QAAQ,EAAExB,CAAC,IAAIZ,WAAW,CAAC6C,KAAK,CAACC,IAAI,CAAClC,CAAC,CAACyB,MAAM,CAACU,KAAK,CAAC;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAENtD,OAAA;QAAQ8C,IAAI,EAAC,QAAQ;QAACH,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAE9C;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACpD,EAAA,CAxHuBD,QAAQ;EAAA,QACLL,SAAS,EAETC,WAAW;AAAA;AAAA+D,EAAA,GAHd3D,QAAQ;AAAA,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}