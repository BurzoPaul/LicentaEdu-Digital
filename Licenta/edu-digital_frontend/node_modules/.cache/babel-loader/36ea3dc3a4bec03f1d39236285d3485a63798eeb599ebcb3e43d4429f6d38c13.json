{"ast":null,"code":"var _jsxFileName = \"C:\\\\Licenta\\\\edu-digital_frontend\\\\src\\\\components\\\\RegisterComp.js\",\n  _s = $RefreshSig$();\n// src/components/CreatePostComp.jsx\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePostComp() {\n  _s();\n  const {\n    user,\n    token,\n    isLoading\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isLoading && !token) {\n      navigate(\"/login\");\n    }\n  }, [token, isLoading, navigate]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [files, setFiles] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"description\", description);\n    formData.append(\"userId\", user.id); // ← aici\n    files.forEach(file => formData.append(\"files\", file));\n    try {\n      const res = await fetch(\"http://localhost:8080/posts/create\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (res.ok) {\n        const createdPost = await res.json();\n        navigate(`/posts/${createdPost.id}`);\n      } else {\n        const err = await res.text();\n        alert(\"Eroare la creare postare: \" + err);\n      }\n    } catch (err) {\n      console.error(err);\n      alert(\"Eroare de rețea.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Creeaz\\u0103 o nou\\u0103 postare\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"create-post-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Imagini/Vid:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: e => setFiles(Array.from(e.target.files))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Trimite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePostComp, \"vDkAAI56NFEVNmINE7R8ViSw5HU=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePostComp;\nvar _c;\n$RefreshReg$(_c, \"CreatePostComp\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","AuthContext","jsxDEV","_jsxDEV","CreatePostComp","_s","user","token","isLoading","navigate","title","setTitle","description","setDescription","files","setFiles","handleSubmit","e","preventDefault","formData","FormData","append","id","forEach","file","res","fetch","method","headers","Authorization","body","ok","createdPost","json","err","text","alert","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","multiple","onChange","Array","from","target","_c","$RefreshReg$"],"sources":["C:/Licenta/edu-digital_frontend/src/components/RegisterComp.js"],"sourcesContent":["// src/components/CreatePostComp.jsx\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { useNavigate }                 from \"react-router-dom\";\r\nimport { AuthContext }                 from \"../context/AuthContext\";\r\n\r\nexport default function CreatePostComp() {\r\n  const { user, token, isLoading } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && !token) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [token, isLoading, navigate]);\r\n\r\n  const [title, setTitle]         = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [files, setFiles]         = useState([]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"userId\", user.id);       // ← aici\r\n    files.forEach((file) => formData.append(\"files\", file));\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:8080/posts/create\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      if (res.ok) {\r\n        const createdPost = await res.json();\r\n        navigate(`/posts/${createdPost.id}`);\r\n      } else {\r\n        const err = await res.text();\r\n        alert(\"Eroare la creare postare: \" + err);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Eroare de rețea.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-post-container\">\r\n      <h2>Creează o nouă postare</h2>\r\n      <form onSubmit={handleSubmit} className=\"create-post-form\">\r\n        {/* … câmpuri titlu/descriere … */}\r\n        <label>\r\n          Imagini/Vid:\r\n          <input\r\n            type=\"file\"\r\n            multiple\r\n            onChange={e => setFiles(Array.from(e.target.files))}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Trimite</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}