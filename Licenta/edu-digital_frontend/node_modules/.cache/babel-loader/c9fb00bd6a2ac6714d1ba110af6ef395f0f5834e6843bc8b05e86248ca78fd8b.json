{"ast":null,"code":"var _jsxFileName = \"C:\\\\Licenta\\\\edu-digital_frontend\\\\src\\\\components\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PostCard from \"./PostCard\";\nimport \"../styles/Post.css\";\nimport axios from \"axios\";\nimport SearchBar from \"./SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = ({\n  showSearchBar = false\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [searchActive, setSearchActive] = useState(false);\n  useEffect(() => {\n    fetchAllPosts();\n  }, []);\n  const fetchAllPosts = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8080/posts/all\");\n      setPosts(res.data);\n      setSearchActive(false);\n    } catch (err) {\n      console.error(\"Eroare la încărcarea postărilor:\", err);\n    }\n  };\n  const handleSearch = async ({\n    keyword\n  }) => {\n    try {\n      const cleanedKeyword = keyword.startsWith(\"#\") ? keyword.slice(1).trim().toLowerCase() : keyword.trim().toLowerCase();\n      const res = await axios.get(\"http://localhost:8080/posts/search\", {\n        params: {\n          keyword: cleanedKeyword\n        }\n      });\n      setPosts(res.data);\n      setSearchActive(true);\n    } catch (err) {\n      console.error(\"Eroare la filtrare:\", err);\n    }\n  };\n  const handleTagClick = async tag => {\n    await handleSearch({\n      keyword: tag\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showSearchBar && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: \"30px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: posts.length === 0 && searchActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginTop: \"40px\",\n          color: \"#aaa\",\n          fontSize: \"1.1rem\"\n        },\n        children: \"Nicio postare g\\u0103sit\\u0103 pentru criteriul introdus.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : posts.map(post => {\n        var _post$imageUrls$, _post$imageUrls;\n        return /*#__PURE__*/_jsxDEV(PostCard, {\n          id: post.id,\n          title: post.title || post.titlu,\n          imageUrl: post.imageUrl || post.imagineUrl || ((_post$imageUrls$ = (_post$imageUrls = post.imageUrls) === null || _post$imageUrls === void 0 ? void 0 : _post$imageUrls[0]) !== null && _post$imageUrls$ !== void 0 ? _post$imageUrls$ : \"\"),\n          tags: post.tags,\n          onTagClick: handleTagClick\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"GTyCuRLOe6jLcZ2RLhLxU4y9ImQ=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","PostCard","axios","SearchBar","jsxDEV","_jsxDEV","Posts","showSearchBar","_s","posts","setPosts","searchActive","setSearchActive","fetchAllPosts","res","get","data","err","console","error","handleSearch","keyword","cleanedKeyword","startsWith","slice","trim","toLowerCase","params","handleTagClick","tag","children","style","display","justifyContent","marginTop","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","length","textAlign","color","fontSize","map","post","_post$imageUrls$","_post$imageUrls","id","title","titlu","imageUrl","imagineUrl","imageUrls","tags","onTagClick","_c","$RefreshReg$"],"sources":["C:/Licenta/edu-digital_frontend/src/components/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PostCard from \"./PostCard\";\r\nimport \"../styles/Post.css\";\r\nimport axios from \"axios\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nconst Posts = ({ showSearchBar = false }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [searchActive, setSearchActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchAllPosts();\r\n  }, []);\r\n\r\n  const fetchAllPosts = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:8080/posts/all\");\r\n      setPosts(res.data);\r\n      setSearchActive(false);\r\n    } catch (err) {\r\n      console.error(\"Eroare la încărcarea postărilor:\", err);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async ({ keyword }) => {\r\n    try {\r\n      const cleanedKeyword = keyword.startsWith(\"#\")\r\n        ? keyword.slice(1).trim().toLowerCase()\r\n        : keyword.trim().toLowerCase();\r\n\r\n      const res = await axios.get(\"http://localhost:8080/posts/search\", {\r\n        params: { keyword: cleanedKeyword },\r\n      });\r\n\r\n      setPosts(res.data);\r\n      setSearchActive(true);\r\n    } catch (err) {\r\n      console.error(\"Eroare la filtrare:\", err);\r\n    }\r\n  };\r\n\r\n  const handleTagClick = async (tag) => {\r\n    await handleSearch({ keyword: tag });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showSearchBar && (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"30px\" }}>\r\n          <SearchBar onSearch={handleSearch} />\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"posts-container\">\r\n        {posts.length === 0 && searchActive ? (\r\n          <div style={{ textAlign: \"center\", marginTop: \"40px\", color: \"#aaa\", fontSize: \"1.1rem\" }}>\r\n            Nicio postare găsită pentru criteriul introdus.\r\n          </div>\r\n        ) : (\r\n          posts.map((post) => (\r\n            <PostCard\r\n              key={post.id}\r\n              id={post.id}\r\n              title={post.title || post.titlu}\r\n              imageUrl={post.imageUrl || post.imagineUrl || (post.imageUrls?.[0] ?? \"\")}\r\n              tags={post.tags}\r\n              onTagClick={handleTagClick}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}