{"ast":null,"code":"var _jsxFileName = \"C:\\\\Licenta\\\\edu-digital_frontend\\\\src\\\\components\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PostCard from \"./PostCard\";\nimport \"../styles/Post.css\";\nimport axios from \"axios\";\nimport SearchBar from \"./SearchBar\"; // ← bara de căutare (opțională)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = ({\n  showSearchBar = false\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n\n  // încărcare inițială a tuturor postărilor\n  useEffect(() => {\n    fetchAllPosts();\n  }, []);\n  const fetchAllPosts = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8080/posts/all\");\n      setPosts(res.data);\n    } catch (err) {\n      console.error(\"Eroare la încărcarea postărilor:\", err);\n    }\n  };\n  const handleSearch = async ({\n    keyword\n  }) => {\n    try {\n      const res = await axios.get(\"http://localhost:8080/posts/search\", {\n        params: {\n          keyword\n        }\n      });\n      setPosts(res.data);\n    } catch (err) {\n      console.error(\"Eroare la filtrare:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showSearchBar && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: \"30px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: posts.map(post => {\n        var _post$imageUrls$, _post$imageUrls;\n        return /*#__PURE__*/_jsxDEV(PostCard, {\n          id: post.id,\n          title: post.titlu || post.title,\n          imageUrl: post.imagineUrl || ((_post$imageUrls$ = (_post$imageUrls = post.imageUrls) === null || _post$imageUrls === void 0 ? void 0 : _post$imageUrls[0]) !== null && _post$imageUrls$ !== void 0 ? _post$imageUrls$ : \"\")\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","PostCard","axios","SearchBar","jsxDEV","_jsxDEV","Posts","showSearchBar","_s","posts","setPosts","fetchAllPosts","res","get","data","err","console","error","handleSearch","keyword","params","children","style","display","justifyContent","marginTop","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","map","post","_post$imageUrls$","_post$imageUrls","id","title","titlu","imageUrl","imagineUrl","imageUrls","_c","$RefreshReg$"],"sources":["C:/Licenta/edu-digital_frontend/src/components/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PostCard from \"./PostCard\";\r\nimport \"../styles/Post.css\";\r\nimport axios from \"axios\";\r\nimport SearchBar from \"./SearchBar\"; // ← bara de căutare (opțională)\r\n\r\nconst Posts = ({ showSearchBar = false }) => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  // încărcare inițială a tuturor postărilor\r\n  useEffect(() => {\r\n    fetchAllPosts();\r\n  }, []);\r\n\r\n  const fetchAllPosts = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:8080/posts/all\");\r\n      setPosts(res.data);\r\n    } catch (err) {\r\n      console.error(\"Eroare la încărcarea postărilor:\", err);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async ({ keyword }) => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:8080/posts/search\", {\r\n        params: { keyword },\r\n      });\r\n      setPosts(res.data);\r\n    } catch (err) {\r\n      console.error(\"Eroare la filtrare:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showSearchBar && (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"30px\" }}>\r\n          <SearchBar onSearch={handleSearch} />\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"posts-container\">\r\n        {posts.map((post) => (\r\n          <PostCard\r\n            key={post.id}\r\n            id={post.id}\r\n            title={post.titlu || post.title}\r\n            imageUrl={post.imagineUrl || (post.imageUrls?.[0] ?? \"\")}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,oBAAoB;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,KAAK,GAAGA,CAAC;EAAEC,aAAa,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAD,SAAS,CAAC,MAAM;IACdY,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,iCAAiC,CAAC;MAC9DH,QAAQ,CAACE,GAAG,CAACE,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEF,GAAG,CAAC;IACxD;EACF,CAAC;EAED,MAAMG,YAAY,GAAG,MAAAA,CAAO;IAAEC;EAAQ,CAAC,KAAK;IAC1C,IAAI;MACF,MAAMP,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,oCAAoC,EAAE;QAChEO,MAAM,EAAE;UAAED;QAAQ;MACpB,CAAC,CAAC;MACFT,QAAQ,CAACE,GAAG,CAACE,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;IAC3C;EACF,CAAC;EAED,oBACEV,OAAA;IAAAgB,QAAA,GACGd,aAAa,iBACZF,OAAA;MAAKiB,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAJ,QAAA,eAC3EhB,OAAA,CAACF,SAAS;QAACuB,QAAQ,EAAER;MAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CACN,eAEDzB,OAAA;MAAK0B,SAAS,EAAC,iBAAiB;MAAAV,QAAA,EAC7BZ,KAAK,CAACuB,GAAG,CAAEC,IAAI;QAAA,IAAAC,gBAAA,EAAAC,eAAA;QAAA,oBACd9B,OAAA,CAACJ,QAAQ;UAEPmC,EAAE,EAAEH,IAAI,CAACG,EAAG;UACZC,KAAK,EAAEJ,IAAI,CAACK,KAAK,IAAIL,IAAI,CAACI,KAAM;UAChCE,QAAQ,EAAEN,IAAI,CAACO,UAAU,MAAAN,gBAAA,IAAAC,eAAA,GAAKF,IAAI,CAACQ,SAAS,cAAAN,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC,cAAAD,gBAAA,cAAAA,gBAAA,GAAI,EAAE;QAAE,GAHpDD,IAAI,CAACG,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIb,CAAC;MAAA,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CAhDIF,KAAK;AAAAoC,EAAA,GAALpC,KAAK;AAkDX,eAAeA,KAAK;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}