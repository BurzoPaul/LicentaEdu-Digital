{"ast":null,"code":"var _jsxFileName = \"C:\\\\Licenta\\\\edu-digital_frontend\\\\src\\\\components\\\\CreatePostComp.js\",\n  _s = $RefreshSig$();\n// src/components/CreatePostComp.jsx\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport \"../styles/CreatePost.css\"; // noul CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePostComp() {\n  _s();\n  const {\n    user,\n    token,\n    isLoading\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  // redirect la login dacă nu ești autentificat\n  useEffect(() => {\n    if (!isLoading && !token) navigate(\"/login\");\n  }, [token, isLoading, navigate]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [files, setFiles] = useState([]); // File objects\n  const [previews, setPreviews] = useState([]); // preview URLs\n  const [feedback, setFeedback] = useState(\"\");\n\n  // generează preview-urile când se schimbă `files`\n  useEffect(() => {\n    if (!files.length) {\n      setPreviews([]);\n      return;\n    }\n    const urls = files.map(file => URL.createObjectURL(file));\n    setPreviews(urls);\n\n    // cleanup: eliberează URL-urile când componenta se demontează sau files se schimbă\n    return () => urls.forEach(url => URL.revokeObjectURL(url));\n  }, [files]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setFeedback(\"\");\n    if (!(user !== null && user !== void 0 && user.id)) {\n      setFeedback(\"⚠️ Trebuie să te autentifici ca să creezi o postare.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"description\", description);\n    formData.append(\"userId\", user.id);\n    files.forEach(f => formData.append(\"files\", f));\n    try {\n      const res = await fetch(\"http://localhost:8080/posts/create\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (!res.ok) throw new Error(await res.text());\n      const created = await res.json();\n      setFeedback(\"✅ Postarea a fost creată!\");\n      setTimeout(() => navigate(`/posts/${created.id}`), 1200);\n    } catch (err) {\n      console.error(err);\n      setFeedback(`⚠️ Eroare la creare: ${err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-details\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"edit-post-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pd-title\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Titlu...\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"pd-author\",\n        children: [\"Autor: \", user === null || user === void 0 ? void 0 : user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pd-description\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Descriere...\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), previews.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-images\",\n        children: previews.map((url, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: url,\n          alt: `preview ${i}`,\n          className: \"preview-img\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback\",\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Adaug\\u0103 imagini:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            accept: \"image/*\",\n            onChange: e => setFiles(Array.from(e.target.files))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"edit-button\",\n        children: \"Creeaz\\u0103 postarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePostComp, \"SFnx3Fsch41fjpBlaMuJnPsVvY8=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePostComp;\nvar _c;\n$RefreshReg$(_c, \"CreatePostComp\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","AuthContext","jsxDEV","_jsxDEV","CreatePostComp","_s","user","token","isLoading","navigate","title","setTitle","description","setDescription","files","setFiles","previews","setPreviews","feedback","setFeedback","length","urls","map","file","URL","createObjectURL","forEach","url","revokeObjectURL","handleSubmit","e","preventDefault","id","formData","FormData","append","f","res","fetch","method","headers","Authorization","body","ok","Error","text","created","json","setTimeout","err","console","error","message","className","children","onSubmit","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","name","i","src","alt","multiple","accept","Array","from","_c","$RefreshReg$"],"sources":["C:/Licenta/edu-digital_frontend/src/components/CreatePostComp.js"],"sourcesContent":["// src/components/CreatePostComp.jsx\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { useNavigate }                        from \"react-router-dom\";\r\nimport { AuthContext }                        from \"../context/AuthContext\";\r\nimport \"../styles/CreatePost.css\";         // noul CSS\r\n\r\nexport default function CreatePostComp() {\r\n  const { user, token, isLoading } = useContext(AuthContext);\r\n  const navigate                   = useNavigate();\r\n\r\n  // redirect la login dacă nu ești autentificat\r\n  useEffect(() => {\r\n    if (!isLoading && !token) navigate(\"/login\");\r\n  }, [token, isLoading, navigate]);\r\n\r\n  const [title, setTitle]           = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [files, setFiles]           = useState([]);        // File objects\r\n  const [previews, setPreviews]     = useState([]);        // preview URLs\r\n  const [feedback, setFeedback]     = useState(\"\");\r\n\r\n  // generează preview-urile când se schimbă `files`\r\n  useEffect(() => {\r\n    if (!files.length) {\r\n      setPreviews([]);\r\n      return;\r\n    }\r\n    const urls = files.map(file => URL.createObjectURL(file));\r\n    setPreviews(urls);\r\n\r\n    // cleanup: eliberează URL-urile când componenta se demontează sau files se schimbă\r\n    return () => urls.forEach(url => URL.revokeObjectURL(url));\r\n  }, [files]);\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setFeedback(\"\");\r\n\r\n    if (!user?.id) {\r\n      setFeedback(\"⚠️ Trebuie să te autentifici ca să creezi o postare.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"userId\", user.id);\r\n    files.forEach(f => formData.append(\"files\", f));\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:8080/posts/create\", {\r\n        method: \"POST\",\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        body: formData\r\n      });\r\n      if (!res.ok) throw new Error(await res.text());\r\n      const created = await res.json();\r\n      setFeedback(\"✅ Postarea a fost creată!\");\r\n      setTimeout(() => navigate(`/posts/${created.id}`), 1200);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setFeedback(`⚠️ Eroare la creare: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-details\">\r\n      <form onSubmit={handleSubmit} className=\"edit-post-form\">\r\n        {/* Titlu */}\r\n        <div className=\"pd-title\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Titlu...\"\r\n            value={title}\r\n            onChange={e => setTitle(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Autor */}\r\n        <h4 className=\"pd-author\">Autor: {user?.name}</h4>\r\n\r\n        {/* Descriere */}\r\n        <div className=\"pd-description\">\r\n          <textarea\r\n            placeholder=\"Descriere...\"\r\n            value={description}\r\n            onChange={e => setDescription(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Preview imagini */}\r\n        {previews.length > 0 && (\r\n          <div className=\"preview-images\">\r\n            {previews.map((url, i) => (\r\n              <img key={i} src={url} alt={`preview ${i}`} className=\"preview-img\" />\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Feedback */}\r\n        {feedback && <div className=\"feedback\">{feedback}</div>}\r\n\r\n        {/* Upload multiplu */}\r\n        <div className=\"file-input\">\r\n          <label>\r\n            Adaugă imagini:\r\n            <input\r\n              type=\"file\"\r\n              multiple\r\n              accept=\"image/*\"\r\n              onChange={e => setFiles(Array.from(e.target.files))}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        {/* Buton submit */}\r\n        <button type=\"submit\" className=\"edit-button\">\r\n          Creează postarea\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}