{"ast":null,"code":"var _jsxFileName = \"C:\\\\Licenta\\\\edu-digital_frontend\\\\src\\\\pages\\\\EditPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport \"../styles/PostDetails.css\"; // stiluri vizualizare\nimport \"../styles/EditPost.css\"; // stiluri formular\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditPost() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [newFiles, setNewFiles] = useState([]);\n  const [feedback, setFeedback] = useState(\"\");\n\n  // Prefill\n  useEffect(() => {\n    if (!token) return navigate(\"/login\");\n    fetch(`http://localhost:8080/posts/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(r => r.json()).then(dto => {\n      setPost(dto);\n      setTitle(dto.title);\n      setDescription(dto.description);\n    }).catch(() => navigate(\"/\"));\n  }, [id, token, navigate]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setFeedback(\"\");\n\n    // update text\n    const textForm = new URLSearchParams();\n    textForm.append(\"title\", title);\n    textForm.append(\"description\", description);\n    const res1 = await fetch(`http://localhost:8080/posts/update/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization: `Bearer ${token}`\n      },\n      body: textForm.toString()\n    });\n    if (!res1.ok) {\n      const err = await res1.text();\n      setFeedback(`⚠️ Eroare la actualizare text: ${err}`);\n      return;\n    }\n\n    // upload noi imagini\n    if (newFiles.length) {\n      const mediaForm = new FormData();\n      newFiles.forEach(f => mediaForm.append(\"files\", f));\n      const res2 = await fetch(`http://localhost:8080/posts/${id}/add-media`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: mediaForm\n      });\n      if (!res2.ok) {\n        const err = await res2.text();\n        setFeedback(`⚠️ Eroare la upload imagini: ${err}`);\n        return;\n      }\n    }\n    setFeedback(\"✅ Postarea a fost actualizată cu succes!\");\n    setTimeout(() => navigate(`/posts/${id}`), 1200);\n  };\n  if (!post) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-details\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"edit-post-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pd-title\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"pd-author\",\n        children: [\"Autor: \", post.authorName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pd-images\",\n        children: (post.imageUrls || []).map((url, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"pd-image\",\n          src: url,\n          alt: title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pd-description\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback\",\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Adaug\\u0103 imagini:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            onChange: e => setNewFiles(Array.from(e.target.files))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"edit-button\",\n        children: \"Salveaz\\u0103\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(EditPost, \"OPgQ48iq0pbWCzCBiI0DKEbX94w=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","useNavigate","AuthContext","jsxDEV","_jsxDEV","EditPost","_s","id","user","token","navigate","post","setPost","title","setTitle","description","setDescription","newFiles","setNewFiles","feedback","setFeedback","fetch","headers","Authorization","then","r","json","dto","catch","handleSubmit","e","preventDefault","textForm","URLSearchParams","append","res1","method","body","toString","ok","err","text","length","mediaForm","FormData","forEach","f","res2","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","value","onChange","target","required","authorName","imageUrls","map","url","i","src","alt","multiple","Array","from","files","_c","$RefreshReg$"],"sources":["C:/Licenta/edu-digital_frontend/src/pages/EditPost.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, useNavigate }            from \"react-router-dom\";\r\nimport { AuthContext }                       from \"../context/AuthContext\";\r\nimport \"../styles/PostDetails.css\";           // stiluri vizualizare\r\nimport \"../styles/EditPost.css\";              // stiluri formular\r\n\r\nexport default function EditPost() {\r\n  const { id }          = useParams();\r\n  const { user, token } = useContext(AuthContext);\r\n  const navigate        = useNavigate();\r\n\r\n  const [post, setPost]           = useState(null);\r\n  const [title, setTitle]         = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [newFiles, setNewFiles]   = useState([]);\r\n  const [feedback, setFeedback]   = useState(\"\");\r\n\r\n  // Prefill\r\n  useEffect(() => {\r\n    if (!token) return navigate(\"/login\");\r\n    fetch(`http://localhost:8080/posts/${id}`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    })\r\n      .then(r => r.json())\r\n      .then(dto => {\r\n        setPost(dto);\r\n        setTitle(dto.title);\r\n        setDescription(dto.description);\r\n      })\r\n      .catch(() => navigate(\"/\"));\r\n  }, [id, token, navigate]);\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setFeedback(\"\");\r\n\r\n    // update text\r\n    const textForm = new URLSearchParams();\r\n    textForm.append(\"title\", title);\r\n    textForm.append(\"description\", description);\r\n    const res1 = await fetch(`http://localhost:8080/posts/update/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n      body: textForm.toString()\r\n    });\r\n    if (!res1.ok) {\r\n      const err = await res1.text();\r\n      setFeedback(`⚠️ Eroare la actualizare text: ${err}`);\r\n      return;\r\n    }\r\n\r\n    // upload noi imagini\r\n    if (newFiles.length) {\r\n      const mediaForm = new FormData();\r\n      newFiles.forEach(f => mediaForm.append(\"files\", f));\r\n      const res2 = await fetch(`http://localhost:8080/posts/${id}/add-media`, {\r\n        method: \"POST\",\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        body: mediaForm\r\n      });\r\n      if (!res2.ok) {\r\n        const err = await res2.text();\r\n        setFeedback(`⚠️ Eroare la upload imagini: ${err}`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setFeedback(\"✅ Postarea a fost actualizată cu succes!\");\r\n    setTimeout(() => navigate(`/posts/${id}`), 1200);\r\n  };\r\n\r\n  if (!post) return <div>Loading…</div>;\r\n\r\n  return (\r\n    <div className=\"post-details\">\r\n      <form onSubmit={handleSubmit} className=\"edit-post-form\">\r\n        {/* Titlu */}\r\n        <div className=\"pd-title\">\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={e => setTitle(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Autor */}\r\n        <h4 className=\"pd-author\">Autor: {post.authorName}</h4>\r\n\r\n        {/* Imagini existente */}\r\n        <div className=\"pd-images\">\r\n          {(post.imageUrls || []).map((url, i) => (\r\n            <img\r\n              key={i}\r\n              className=\"pd-image\"\r\n              src={url}\r\n              alt={title}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        {/* Descriere */}\r\n        <div className=\"pd-description\">\r\n          <textarea\r\n            value={description}\r\n            onChange={e => setDescription(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Feedback */}\r\n        {feedback && <div className=\"feedback\">{feedback}</div>}\r\n\r\n        {/* Încărcare imagini noi */}\r\n        <div className=\"file-input\">\r\n          <label>\r\n            Adaugă imagini:\r\n            <input\r\n              type=\"file\"\r\n              multiple\r\n              onChange={e => setNewFiles(Array.from(e.target.files))}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        {/* Buton Salvează */}\r\n        <button type=\"submit\" className=\"edit-button\">\r\n          Salvează\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}