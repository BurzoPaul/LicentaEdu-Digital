{"ast":null,"code":"var _jsxFileName = \"C:\\\\Licenta\\\\edu-digital_frontend\\\\src\\\\components\\\\PostDetails.js\",\n  _s = $RefreshSig$();\n// src/components/PostDetails.jsx\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostDetails() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n    axios.get(`http://localhost:8080/posts/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log(\"🔍 post details:\", res.data);\n      setPost(res.data);\n    }).catch(err => {\n      console.error(err);\n      navigate(\"/\"); // dacă nu există sau e eroare\n    });\n  }, [id, token, navigate]);\n  if (!post) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 21\n  }, this);\n\n  // compari user.id cu authorId preluat din DTO\n  const isAuthor = (user === null || user === void 0 ? void 0 : user.id) === post.authorId;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"pd-title\",\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"pd-author\",\n      children: [\"Autor: \", post.authorName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pd-images\",\n      children: (post.imageUrls || []).map((url, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"pd-image\",\n        src: url,\n        alt: post.title\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"pd-description\",\n      children: post.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), isAuthor && /*#__PURE__*/_jsxDEV(Link, {\n      to: `/posts/${id}/edit`,\n      className: \"edit-button\",\n      children: \"Editeaz\\u0103 postarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(PostDetails, \"juHk0MQRRy68cIJ2k4yzWHnuPGA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PostDetails;\nvar _c;\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useParams","Link","useNavigate","axios","AuthContext","jsxDEV","_jsxDEV","PostDetails","_s","id","user","token","navigate","post","setPost","get","headers","Authorization","then","res","console","log","data","catch","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","isAuthor","authorId","className","title","authorName","imageUrls","map","url","i","src","alt","description","to","_c","$RefreshReg$"],"sources":["C:/Licenta/edu-digital_frontend/src/components/PostDetails.js"],"sourcesContent":["// src/components/PostDetails.jsx\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport default function PostDetails() {\r\n  const { id } = useParams();\r\n  const { user, token } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const [post, setPost] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .get(`http://localhost:8080/posts/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(\"🔍 post details:\", res.data);\r\n        setPost(res.data);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        navigate(\"/\"); // dacă nu există sau e eroare\r\n      });\r\n  }, [id, token, navigate]);\r\n\r\n  if (!post) return <div>Loading…</div>;\r\n\r\n  // compari user.id cu authorId preluat din DTO\r\n  const isAuthor = user?.id === post.authorId;\r\n\r\n  return (\r\n    <div className=\"post-details\">\r\n      <h1 className=\"pd-title\">{post.title}</h1>\r\n      <h4 className=\"pd-author\">Autor: {post.authorName}</h4>\r\n\r\n      <div className=\"pd-images\">\r\n        {(post.imageUrls || []).map((url, i) => (\r\n          <img\r\n            key={i}\r\n            className=\"pd-image\"\r\n            src={url}\r\n            alt={post.title}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <p className=\"pd-description\">{post.description}</p>\r\n\r\n      {isAuthor && (\r\n        <Link to={`/posts/${id}/edit`} className=\"edit-button\">\r\n          Editează postarea\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,SAAS,EAAEC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAM;IAAEU,IAAI;IAAEC;EAAM,CAAC,GAAGZ,UAAU,CAACK,WAAW,CAAC;EAC/C,MAAMQ,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,KAAK,EAAE;MACVC,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IAEAT,KAAK,CACFY,GAAG,CAAC,+BAA+BN,EAAE,EAAE,EAAE;MACxCO,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUN,KAAK;MAChC;IACF,CAAC,CAAC,CACDO,IAAI,CAACC,GAAG,IAAI;MACXC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,GAAG,CAACG,IAAI,CAAC;MACzCR,OAAO,CAACK,GAAG,CAACG,IAAI,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;MACZJ,OAAO,CAACK,KAAK,CAACD,GAAG,CAAC;MAClBZ,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC;EACN,CAAC,EAAE,CAACH,EAAE,EAAEE,KAAK,EAAEC,QAAQ,CAAC,CAAC;EAEzB,IAAI,CAACC,IAAI,EAAE,oBAAOP,OAAA;IAAAoB,QAAA,EAAK;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;;EAErC;EACA,MAAMC,QAAQ,GAAG,CAAArB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAED,EAAE,MAAKI,IAAI,CAACmB,QAAQ;EAE3C,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,cAAc;IAAAP,QAAA,gBAC3BpB,OAAA;MAAI2B,SAAS,EAAC,UAAU;MAAAP,QAAA,EAAEb,IAAI,CAACqB;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1CxB,OAAA;MAAI2B,SAAS,EAAC,WAAW;MAAAP,QAAA,GAAC,SAAO,EAACb,IAAI,CAACsB,UAAU;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEvDxB,OAAA;MAAK2B,SAAS,EAAC,WAAW;MAAAP,QAAA,EACvB,CAACb,IAAI,CAACuB,SAAS,IAAI,EAAE,EAAEC,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBACjCjC,OAAA;QAEE2B,SAAS,EAAC,UAAU;QACpBO,GAAG,EAAEF,GAAI;QACTG,GAAG,EAAE5B,IAAI,CAACqB;MAAM,GAHXK,CAAC;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIP,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENxB,OAAA;MAAG2B,SAAS,EAAC,gBAAgB;MAAAP,QAAA,EAAEb,IAAI,CAAC6B;IAAW;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEnDC,QAAQ,iBACPzB,OAAA,CAACL,IAAI;MAAC0C,EAAE,EAAE,UAAUlC,EAAE,OAAQ;MAACwB,SAAS,EAAC,aAAa;MAAAP,QAAA,EAAC;IAEvD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtB,EAAA,CA1DuBD,WAAW;EAAA,QAClBP,SAAS,EAEPE,WAAW;AAAA;AAAA0C,EAAA,GAHNrC,WAAW;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}